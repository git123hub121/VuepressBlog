{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\src\\_posts\\2020-12-22-腾讯弹幕数据分析实战.md?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\src\\_posts\\2020-12-22-腾讯弹幕数据分析实战.md","mtime":1647224039561},{"path":"C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\VuepressBlog\\vuepress-blog\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["2020-12-22-腾讯弹幕数据分析实战.md"],"names":[],"mappingsyfile":"2020-12-22-腾讯弹幕数据分析实战.md","sourceRoot":"src/_posts","sourcesContent":["<template>\n<ContentSlotsDistributor :slot-key=\"$parent.slotKey\"><h1 id=\"腾讯弹幕数据分析实战\"><a class=\"header-anchor\" href=\"#腾讯弹幕数据分析实战\">#</a> 腾讯弹幕数据分析实战</h1>\n<h1 id=\"通用爬虫代码\"><a class=\"header-anchor\" href=\"#通用爬虫代码\">#</a> 通用爬虫代码：</h1>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token triple-quoted-string string\">'''\nDate: 2020-12-21 23:27:59\nLastEditTime: 2020-12-22 16:36:43\n'''</span>\n<span class=\"token keyword\">import</span> requests\n<span class=\"token keyword\">import</span> json\n<span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n  \n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_danmu_all_page</span><span class=\"token punctuation\">(</span>target_id<span class=\"token punctuation\">,</span> vid<span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> page <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\">#亲测有效</span>\n        headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'User-Agent'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36'</span><span class=\"token punctuation\">}</span>\n        url <span class=\"token operator\">=</span> <span class=\"token string\">'https://mfm.video.qq.com/danmu?otype=json&amp;timestamp={0}&amp;target_id={1}vid{2}&amp;count=80'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">,</span>target_id<span class=\"token punctuation\">,</span>vid<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正在提取第\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"页\"</span><span class=\"token punctuation\">)</span>\n        html <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>headers <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">)</span>\n        bs <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span>strict <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#strict参数解决部分内容json格式解析报错</span>\n        time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">#遍历获取目标字段</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> bs<span class=\"token punctuation\">[</span><span class=\"token string\">'comments'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                opername <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'opername'</span><span class=\"token punctuation\">]</span>\n                content <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'content'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#弹幕</span>\n                upcount <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'upcount'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#点赞数</span>\n                user_degree <span class=\"token operator\">=</span>i<span class=\"token punctuation\">[</span><span class=\"token string\">'uservip_degree'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">#会员等级</span>\n                timepoint <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'timepoint'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#发布时间</span>\n                comment_id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">[</span><span class=\"token string\">'commentid'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">#弹幕id</span>\n                cache <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token string\">'用户id'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>opername<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'弹幕'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>content<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'会员等级'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>user_degree<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'发布时间'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>timepoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'弹幕点赞'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>upcount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'弹幕id'</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>comment_id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n                df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">,</span>cache<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n    <span class=\"token comment\"># df.to_csv(f'{filename}.csv',encoding = 'utf-8')</span>\n    <span class=\"token keyword\">return</span> df\n<span class=\"token comment\">#自己按需添加</span>\ntarget_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'6130942571%26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'6164313448%26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'6194952391%26'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'6227063464%26'</span><span class=\"token punctuation\">]</span>\nvid <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'%3Dt0034o74jpr'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%3Dr00346rvwyq'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%3Dd0035rctvoh'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'%3Db0035j0tgo0'</span><span class=\"token punctuation\">]</span>\nfilename <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'面试篇'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'第1期'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'第2期'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'第3期'</span><span class=\"token punctuation\">]</span>\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>vid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    df <span class=\"token operator\">=</span> get_danmu_all_page<span class=\"token punctuation\">(</span>target_id<span class=\"token operator\">=</span>target_id<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> vid<span class=\"token operator\">=</span>vid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>filename<span class=\"token operator\">=</span>filename<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#df{}.format(data_dm[i])</span>\n    df<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'所属期数'</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    df<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>filename<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">.csv'</span></span><span class=\"token punctuation\">,</span>index<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h1 id=\"令人心动的offer2可视化分析\"><a class=\"header-anchor\" href=\"#令人心动的offer2可视化分析\">#</a> 令人心动的offer2可视化分析</h1>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pyecharts<span class=\"token punctuation\">.</span>options <span class=\"token keyword\">as</span> opts\n<span class=\"token keyword\">from</span> pyecharts<span class=\"token punctuation\">.</span>charts <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n<span class=\"token keyword\">from</span> pyecharts<span class=\"token punctuation\">.</span><span class=\"token builtin\">globals</span> <span class=\"token keyword\">import</span> ThemeType\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"批量导入数据并合并\"><a class=\"header-anchor\" href=\"#批量导入数据并合并\">#</a> 批量导入数据并合并</h2>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\"># path = 'D:/Pandas/csv/'</span>\n<span class=\"token comment\"># #文件目录路径</span>\n<span class=\"token comment\"># df_all = pd.DataFrame()</span>\n<span class=\"token comment\"># for i in os.listdir(path):</span>\n<span class=\"token comment\">#     df_one = pd.read_csv(path+f'{i}', engine='python', encoding='utf-8')  </span>\n<span class=\"token comment\">#     df_all = df_all.append(df_one, ignore_index=False)#ignore_index：默认值为False，如果为True则不使用index标签</span>\n<span class=\"token comment\"># df_all.shape</span>\n<span class=\"token comment\"># #输出</span>\n<span class=\"token comment\"># df_all.to_excel('offer.xlsx',index=False)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"数据读取\"><a class=\"header-anchor\" href=\"#数据读取\">#</a> 数据读取</h2>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_excel<span class=\"token punctuation\">(</span><span class=\"token string\">'offer.xlsx'</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--></style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>所属期数</th>\n      <th>用户id</th>\n      <th>弹幕</th>\n      <th>会员等级</th>\n      <th>发布时间</th>\n      <th>弹幕点赞</th>\n      <th>弹幕id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>47，第一来了</td>\n      <td>4</td>\n      <td>5</td>\n      <td>23</td>\n      <td>6732257356663684096</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>第一</td>\n      <td>1</td>\n      <td>8</td>\n      <td>5</td>\n      <td>6732257393620750336</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>哈哈哈，我还以为我是第一个呢</td>\n      <td>1</td>\n      <td>7</td>\n      <td>32</td>\n      <td>6732257548063721472</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>YEYEYEY</td>\n      <td>0</td>\n      <td>8</td>\n      <td>16</td>\n      <td>6732257672952315904</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>来了来了，</td>\n      <td>6</td>\n      <td>6</td>\n      <td>18</td>\n      <td>6732258003787425792</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>第1期</td>\n      <td>叶湘伦</td>\n      <td>来了</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0</td>\n      <td>6732258629720189952</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>来了来了</td>\n      <td>0</td>\n      <td>8</td>\n      <td>2</td>\n      <td>6732258673319944192</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>第1期</td>\n      <td>海浪</td>\n      <td>来啦</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0</td>\n      <td>6732258806970479616</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>来咯</td>\n      <td>0</td>\n      <td>5</td>\n      <td>4</td>\n      <td>6732258885488543744</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>第1期</td>\n      <td>熙崽是神仙</td>\n      <td>第一！</td>\n      <td>0</td>\n      <td>7</td>\n      <td>9</td>\n      <td>6732260786762655744</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h2 id=\"数据处理及清洗\"><a class=\"header-anchor\" href=\"#数据处理及清洗\">#</a> 数据处理及清洗</h2>\n<h3 id=\"重命名\"><a class=\"header-anchor\" href=\"#重命名\">#</a> 重命名</h3>\n<p>所属期数 episodes   用户id user     弹幕 comment    会员等级 grade  发布时间 date   弹幕点赞 likecounts     弹幕id dmid</p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'所属期数'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'episodes'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'用户id'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'弹幕'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'会员等级'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'grade'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'发布时间'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'弹幕点赞'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'likecounts'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'弹幕id'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'dmid'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--></style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>episodes</th>\n      <th>user</th>\n      <th>comment</th>\n      <th>grade</th>\n      <th>date</th>\n      <th>likecounts</th>\n      <th>dmid</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>47，第一来了</td>\n      <td>4</td>\n      <td>5</td>\n      <td>23</td>\n      <td>6732257356663684096</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>第一</td>\n      <td>1</td>\n      <td>8</td>\n      <td>5</td>\n      <td>6732257393620750336</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>哈哈哈，我还以为我是第一个呢</td>\n      <td>1</td>\n      <td>7</td>\n      <td>32</td>\n      <td>6732257548063721472</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>YEYEYEY</td>\n      <td>0</td>\n      <td>8</td>\n      <td>16</td>\n      <td>6732257672952315904</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>第1期</td>\n      <td>NaN</td>\n      <td>来了来了，</td>\n      <td>6</td>\n      <td>6</td>\n      <td>18</td>\n      <td>6732258003787425792</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 70798 entries, 0 to 70797\nData columns (total 7 columns):\n #   Column      Non-Null Count  Dtype \n---  ------      --------------  ----- \n 0   episodes    70798 non-null  object\n 1   user        26409 non-null  object\n 2   comment     70797 non-null  object\n 3   grade       70798 non-null  int64 \n 4   date        70798 non-null  int64 \n 5   likecounts  70798 non-null  int64 \n 6   dmid        70798 non-null  int64 \ndtypes: int64(4), object(3)\nmemory usage: 3.8+ MB\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"过滤字段\"><a class=\"header-anchor\" href=\"#过滤字段\">#</a> 过滤字段</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\">#对用户进行空值补充</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token string\">'未知用户'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#对弹幕进行re匹配处理</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>extract<span class=\"token punctuation\">(</span><span class=\"token string\">r\"([\\u4e00-\\u9fa5]+)\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#提取中文内容</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>dropna<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#纯表情弹幕直接删除</span>\n<span class=\"token comment\">#提取分析字段</span>\ndf <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--></style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>episodes</th>\n      <th>user</th>\n      <th>comment</th>\n      <th>grade</th>\n      <th>date</th>\n      <th>likecounts</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>第1期</td>\n      <td>未知用户</td>\n      <td>第一来了</td>\n      <td>4</td>\n      <td>5</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>第1期</td>\n      <td>未知用户</td>\n      <td>第一</td>\n      <td>1</td>\n      <td>8</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>第1期</td>\n      <td>未知用户</td>\n      <td>哈哈哈</td>\n      <td>1</td>\n      <td>7</td>\n      <td>32</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>第1期</td>\n      <td>未知用户</td>\n      <td>来了来了</td>\n      <td>6</td>\n      <td>6</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>第1期</td>\n      <td>叶湘伦</td>\n      <td>来了</td>\n      <td>0</td>\n      <td>8</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h3 id=\"时间格式转换\"><a class=\"header-anchor\" href=\"#时间格式转换\">#</a> 时间格式转换</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">def</span> <span class=\"token function\">time_change</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    m<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span>seconds<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n    h<span class=\"token punctuation\">,</span> m <span class=\"token operator\">=</span> <span class=\"token builtin\">divmod</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n    ss_time <span class=\"token operator\">=</span> <span class=\"token string\">\"%d:%02d:%02d\"</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># print(ss_time)</span>\n    <span class=\"token keyword\">return</span> ss_time\n<span class=\"token comment\"># time_change(seconds=8888)</span>\n<span class=\"token comment\">#将time_change函数应用于date字段：</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>time_change<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#设置为需要的时间格式</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x <span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">.</span>strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%H:%M:%S'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"机械压缩函数处理comment\"><a class=\"header-anchor\" href=\"#机械压缩函数处理comment\">#</a> 机械压缩函数处理comment</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\">#定义机械压缩函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">yasuo</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> st<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">:</span>j<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> st<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span>i<span class=\"token punctuation\">:</span>j<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                k <span class=\"token operator\">=</span> j <span class=\"token operator\">+</span> i\n                <span class=\"token keyword\">while</span> st<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">:</span>k<span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> st<span class=\"token punctuation\">[</span>k<span class=\"token operator\">+</span>i<span class=\"token punctuation\">:</span>k<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span> <span class=\"token keyword\">and</span> k<span class=\"token operator\">&lt;</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   \n                    k <span class=\"token operator\">=</span> k <span class=\"token operator\">+</span> i\n                st <span class=\"token operator\">=</span> st<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> st<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>    \n    <span class=\"token keyword\">return</span> st\n<span class=\"token comment\"># yasuo(st='')</span>\n<span class=\"token comment\">#调用机械压缩函数</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">\"comment\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">\"comment\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token string\">\"str\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>yasuo<span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"会员等级打标\"><a class=\"header-anchor\" href=\"#会员等级打标\">#</a> 会员等级打标</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">.</span>grade<span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>[0, 3, 1, 4, 2, 5, 6, 7, 8]\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">[</span><span class=\"token string\">'grade'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'v'</span><span class=\"token operator\">+</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token string\">'str'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#['v'+i for i in df['grade']]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--></style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>episodes</th>\n      <th>user</th>\n      <th>comment</th>\n      <th>grade</th>\n      <th>date</th>\n      <th>likecounts</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>9235</th>\n      <td>第1期</td>\n      <td>未知用户</td>\n      <td>王颖飞好像一个演员</td>\n      <td>v0</td>\n      <td>00:27:42</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>57421</th>\n      <td>面试篇</td>\n      <td>zxz</td>\n      <td>彩虹袜</td>\n      <td>v3</td>\n      <td>00:13:07</td>\n      <td>12</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h2 id=\"数据分析\"><a class=\"header-anchor\" href=\"#数据分析\">#</a> 数据分析</h2>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\">#绘图通用函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_pyechart</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>chart<span class=\"token punctuation\">,</span>title<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">,</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> chart <span class=\"token operator\">==</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">:</span>\n        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n            Bar<span class=\"token punctuation\">(</span>init_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>InitOpts<span class=\"token punctuation\">(</span>theme<span class=\"token operator\">=</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add_xaxis<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add_yaxis<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span> \n            <span class=\"token punctuation\">.</span>set_series_opts<span class=\"token punctuation\">(</span>label_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>LabelOpts<span class=\"token punctuation\">(</span>font_size<span class=\"token operator\">=</span>size<span class=\"token punctuation\">,</span>position<span class=\"token operator\">=</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> chart <span class=\"token operator\">==</span> <span class=\"token string\">'barh'</span><span class=\"token punctuation\">:</span>\n        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n            Bar<span class=\"token punctuation\">(</span>init_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>InitOpts<span class=\"token punctuation\">(</span>theme<span class=\"token operator\">=</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add_xaxis<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add_yaxis<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reversal_axis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#X轴与y轴调换顺序</span>\n            <span class=\"token punctuation\">.</span>set_series_opts<span class=\"token punctuation\">(</span>label_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>LabelOpts<span class=\"token punctuation\">(</span>font_size<span class=\"token operator\">=</span>size<span class=\"token punctuation\">,</span>position<span class=\"token operator\">=</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> chart <span class=\"token operator\">==</span> <span class=\"token string\">'pie'</span><span class=\"token punctuation\">:</span>\n        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n            Pie<span class=\"token punctuation\">(</span>init_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>InitOpts<span class=\"token punctuation\">(</span>theme<span class=\"token operator\">=</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>set_series_opts<span class=\"token punctuation\">(</span>label_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>LabelOpts<span class=\"token punctuation\">(</span>formatter<span class=\"token operator\">=</span><span class=\"token string\">\"等级{b}占比:{d}%\"</span><span class=\"token punctuation\">,</span>font_size<span class=\"token operator\">=</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> chart <span class=\"token operator\">==</span> <span class=\"token string\">'line'</span><span class=\"token punctuation\">:</span>\n        c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n            Line<span class=\"token punctuation\">(</span>init_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>InitOpts<span class=\"token punctuation\">(</span>theme<span class=\"token operator\">=</span>theme<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add_xaxis<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>add_yaxis<span class=\"token punctuation\">(</span><span class=\"token string\">'情感倾向'</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> is_smooth<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>is_connect_nones<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>areastyle_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>AreaStyleOpts<span class=\"token punctuation\">(</span>opacity<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span>set_global_opts<span class=\"token punctuation\">(</span>title_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>TitleOpts<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span>title<span class=\"token punctuation\">,</span>subtitle<span class=\"token operator\">=</span><span class=\"token string\">\"数据来源：腾讯视频\"</span><span class=\"token punctuation\">,</span>pos_left <span class=\"token operator\">=</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n    c<span class=\"token punctuation\">.</span>set_global_opts<span class=\"token punctuation\">(</span>title_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>TitleOpts<span class=\"token punctuation\">(</span>title<span class=\"token operator\">=</span>title<span class=\"token punctuation\">,</span>subtitle<span class=\"token operator\">=</span><span class=\"token string\">\"数据来源：腾讯视频\"</span><span class=\"token punctuation\">,</span>pos_left <span class=\"token operator\">=</span> <span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                        xaxis_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>AxisOpts<span class=\"token punctuation\">(</span>axislabel_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>LabelOpts<span class=\"token punctuation\">(</span>font_size<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#更改横坐标字体大小</span>\n                        yaxis_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>AxisOpts<span class=\"token punctuation\">(</span>axislabel_opts<span class=\"token operator\">=</span>opts<span class=\"token punctuation\">.</span>LabelOpts<span class=\"token punctuation\">(</span>font_size<span class=\"token operator\">=</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">#更改纵坐标字体大小</span>\n                        <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">.</span>render_notebook<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><h3 id=\"_1-各期弹幕数量对比\"><a class=\"header-anchor\" href=\"#_1-各期弹幕数量对比\">#</a> 1.各期弹幕数量对比</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df_e <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'episodes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf_e\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>面试篇    18603\n第3期    18107\n第1期    17551\n第2期    15844\nName: episodes, dtype: int64\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>x <span class=\"token operator\">=</span> df_e<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> df_e<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf_e <span class=\"token operator\">=</span> get_pyechart<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>chart<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span>title<span class=\"token operator\">=</span><span class=\"token string\">'各期弹幕数量'</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pos<span class=\"token operator\">=</span><span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span>theme<span class=\"token operator\">=</span>ThemeType<span class=\"token punctuation\">.</span>DARK<span class=\"token punctuation\">)</span>\ndf_e\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"https://img-blog.csdnimg.cn/20201222170017411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYwOTEy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"_2-谁是弹幕发射机\"><a class=\"header-anchor\" href=\"#_2-谁是弹幕发射机\">#</a> 2.谁是弹幕发射机</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df_u <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ndf_u\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>神马不是浮云     78\n.          79\n圣雪天使       80\n。          89\n白龙吟        92\n为时不晚i      93\nmomo       93\nベ☆小强呐     103\n想太多de猫    135\nName: user, dtype: int64\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>x <span class=\"token operator\">=</span> df_u<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> df_u<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf_u <span class=\"token operator\">=</span> get_pyechart<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>chart<span class=\"token operator\">=</span><span class=\"token string\">'barh'</span><span class=\"token punctuation\">,</span>title<span class=\"token operator\">=</span><span class=\"token string\">'弹幕发送数量TOP10'</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pos<span class=\"token operator\">=</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span>theme<span class=\"token operator\">=</span>ThemeType<span class=\"token punctuation\">.</span>DARK<span class=\"token punctuation\">)</span>\ndf_u\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"https://img-blog.csdnimg.cn/20201222165950490.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYwOTEy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">\"想太多de猫\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n<!--beforeend--></div><!--afterend--></style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>episodes</th>\n      <th>user</th>\n      <th>comment</th>\n      <th>grade</th>\n      <th>date</th>\n      <th>likecounts</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>17104</th>\n      <td>第1期</td>\n      <td>想太多de猫</td>\n      <td>爱吃辣的都是美女</td>\n      <td>v4</td>\n      <td>00:51:54</td>\n      <td>9</td>\n    </tr>\n    <tr>\n      <th>20881</th>\n      <td>第2期</td>\n      <td>想太多de猫</td>\n      <td>如果这都是咸鱼</td>\n      <td>v4</td>\n      <td>00:09:45</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>1489</th>\n      <td>第1期</td>\n      <td>想太多de猫</td>\n      <td>领带神马的太高端</td>\n      <td>v4</td>\n      <td>00:04:42</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>5408</th>\n      <td>第1期</td>\n      <td>想太多de猫</td>\n      <td>谦虚不等于诚实哦</td>\n      <td>v4</td>\n      <td>00:15:49</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>57919</th>\n      <td>面试篇</td>\n      <td>想太多de猫</td>\n      <td>大多数父母的想法</td>\n      <td>v4</td>\n      <td>00:14:54</td>\n      <td>7</td>\n    </tr>\n    <tr>\n      <th>60506</th>\n      <td>面试篇</td>\n      <td>想太多de猫</td>\n      <td>越看越自卑</td>\n      <td>v4</td>\n      <td>00:21:36</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>45714</th>\n      <td>第3期</td>\n      <td>想太多de猫</td>\n      <td>这是绝对的高质量对抗</td>\n      <td>v0</td>\n      <td>00:37:00</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>21397</th>\n      <td>第2期</td>\n      <td>想太多de猫</td>\n      <td>瞿泽林这句对人性的关怀</td>\n      <td>v4</td>\n      <td>00:11:05</td>\n      <td>49</td>\n    </tr>\n    <tr>\n      <th>59906</th>\n      <td>面试篇</td>\n      <td>想太多de猫</td>\n      <td>假发了解一下</td>\n      <td>v4</td>\n      <td>00:19:53</td>\n      <td>13</td>\n    </tr>\n    <tr>\n      <th>39564</th>\n      <td>第3期</td>\n      <td>想太多de猫</td>\n      <td>个人觉得直接问更好</td>\n      <td>v0</td>\n      <td>00:21:49</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<h3 id=\"_3-会员等级分布\"><a class=\"header-anchor\" href=\"#_3-会员等级分布\">#</a> 3.会员等级分布</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df_g <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'grade'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>value_counts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\ndf_g\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>v8       12\nv7      135\nv6     1496\nv5     2097\nv2     2499\nv4     2957\nv1     3220\nv3     3403\nv0    54286\nName: grade, dtype: int64\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>x <span class=\"token operator\">=</span> df_g<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> df_g<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf_g <span class=\"token operator\">=</span> get_pyechart<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>chart<span class=\"token operator\">=</span><span class=\"token string\">'pie'</span><span class=\"token punctuation\">,</span>title<span class=\"token operator\">=</span><span class=\"token string\">'会员等级分布'</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span>pos<span class=\"token operator\">=</span><span class=\"token string\">'right'</span><span class=\"token punctuation\">,</span>theme<span class=\"token operator\">=</span>ThemeType<span class=\"token punctuation\">.</span>DARK<span class=\"token punctuation\">)</span>\ndf_g\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"https://img-blog.csdnimg.cn/20201222165917851.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYwOTEy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"词云图讨论\"><a class=\"header-anchor\" href=\"#词云图讨论\">#</a> 词云图讨论</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">import</span> stylecloud\n<span class=\"token keyword\">import</span> jieba\n<span class=\"token keyword\">import</span> os \n<span class=\"token keyword\">from</span> IPython<span class=\"token punctuation\">.</span>display <span class=\"token keyword\">import</span> Image <span class=\"token comment\"># 用于在jupyter lab中显示本地图</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\"># 定义分词函数</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_cut_words</span><span class=\"token punctuation\">(</span>content_series<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 读入停用词表</span>\n    stop_words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> \n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">r\"D:/Pandas/已学习/如何制作stylecloud词云？/stop_words.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n        lines <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> lines<span class=\"token punctuation\">:</span>\n            stop_words<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 添加关键词</span>\n    my_words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'撒老师'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'范丞丞'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'第一季'</span><span class=\"token punctuation\">]</span>  \n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> my_words<span class=\"token punctuation\">:</span>\n        jieba<span class=\"token punctuation\">.</span>add_word<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> \n    <span class=\"token comment\"># 自定义停用词</span>\n    my_stop_words <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'好像'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'真的'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'感觉'</span><span class=\"token punctuation\">]</span>   \n    stop_words<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>my_stop_words<span class=\"token punctuation\">)</span>               \n    <span class=\"token comment\"># 分词</span>\n    word_num <span class=\"token operator\">=</span> jieba<span class=\"token punctuation\">.</span>lcut<span class=\"token punctuation\">(</span>content_series<span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span>sep<span class=\"token operator\">=</span><span class=\"token string\">'。'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cut_all<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 条件筛选</span>\n    word_num_selected <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> word_num <span class=\"token keyword\">if</span> i <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> stop_words <span class=\"token keyword\">and</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">return</span> word_num_selected\n<span class=\"token comment\"># 绘制词云图</span>\ntext1 <span class=\"token operator\">=</span> get_cut_words<span class=\"token punctuation\">(</span>content_series<span class=\"token operator\">=</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nstylecloud<span class=\"token punctuation\">.</span>gen_stylecloud<span class=\"token punctuation\">(</span>text<span class=\"token operator\">=</span><span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>text1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> max_words<span class=\"token operator\">=</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n                          collocations<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n                          font_path<span class=\"token operator\">=</span><span class=\"token string\">'字酷堂清楷体.ttf'</span><span class=\"token punctuation\">,</span>\n                          icon_name<span class=\"token operator\">=</span><span class=\"token string\">'fas fa-dog'</span><span class=\"token punctuation\">,</span>\n                          size<span class=\"token operator\">=</span><span class=\"token number\">512</span><span class=\"token punctuation\">,</span>\n                          <span class=\"token comment\">#palette='matplotlib.Inferno_9',</span>\n                          output_name<span class=\"token operator\">=</span><span class=\"token string\">'offer.png'</span><span class=\"token punctuation\">)</span>\nImage<span class=\"token punctuation\">(</span>filename<span class=\"token operator\">=</span><span class=\"token string\">'offer.png'</span><span class=\"token punctuation\">)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>Building prefix dict from the default dictionary ...\nLoading model from cache C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\jieba.cache\nLoading model cost 2.044 seconds.\nPrefix dict has been built successfully.\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"https://img-blog.csdnimg.cn/20201222165827726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYwOTEy,size_16,color_FFFFFF,t_70\" alt=\"[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-PL3JJJhN-1608626592533)(demo-offer_files/demo-offer_39_1.png)]\"></p>\n<h3 id=\"_4-人物被提及\"><a class=\"header-anchor\" href=\"#_4-人物被提及\">#</a> 4.人物被提及</h3>\n<p>丁辉,詹秋怡,王骁,朱一暄,瞿泽林,李晋晔,王颖飞,刘煜成</p>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token comment\">#df.str.contains('')虽然不能用来判断，但是可以进行聚合操作</span>\ndf_talk <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'丁辉'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'詹秋怡'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'王骁'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'朱一暄'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'瞿泽林'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'李晋晔'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'王颖飞'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'刘煜成'</span><span class=\"token punctuation\">]</span>\ndft <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>contains<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> df_talk<span class=\"token punctuation\">]</span>\ndf_t <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'people'</span><span class=\"token punctuation\">:</span>df_talk<span class=\"token punctuation\">,</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">:</span>dft<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\ndf_t <span class=\"token operator\">=</span> df_t<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> df_t<span class=\"token punctuation\">[</span><span class=\"token string\">'people'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> df_t<span class=\"token punctuation\">[</span><span class=\"token string\">'count'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ndf_t <span class=\"token operator\">=</span> get_pyechart<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>chart<span class=\"token operator\">=</span><span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span>title<span class=\"token operator\">=</span><span class=\"token string\">'被提及次数'</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pos<span class=\"token operator\">=</span><span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span>theme<span class=\"token operator\">=</span>ThemeType<span class=\"token punctuation\">.</span>DARK<span class=\"token punctuation\">)</span>\ndf_t\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"https://img-blog.csdnimg.cn/20201222165725284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYwOTEy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h3 id=\"情感分析\"><a class=\"header-anchor\" href=\"#情感分析\">#</a> 情感分析</h3>\n<!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code><span class=\"token keyword\">import</span> paddlehub <span class=\"token keyword\">as</span> hub\n<span class=\"token comment\">#这里使用了百度开源的成熟NLP模型来预测情感倾向</span>\nsenta <span class=\"token operator\">=</span> hub<span class=\"token punctuation\">.</span>Module<span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"senta_bilstm\"</span><span class=\"token punctuation\">)</span>\ntexts <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'comment'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ninput_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">'text'</span><span class=\"token punctuation\">:</span>texts<span class=\"token punctuation\">}</span>\nres <span class=\"token operator\">=</span> senta<span class=\"token punctuation\">.</span>sentiment_classify<span class=\"token punctuation\">(</span>data<span class=\"token operator\">=</span>input_data<span class=\"token punctuation\">)</span>\ndf<span class=\"token punctuation\">[</span><span class=\"token string\">'pos'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span><span class=\"token string\">'positive_probs'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">]</span>\n<span class=\"token comment\">#重采样至15分钟</span>\ndf<span class=\"token punctuation\">.</span>index <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>to_datetime<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>resample<span class=\"token punctuation\">(</span><span class=\"token string\">'15min'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># #给数据表添加调色板</span>\n<span class=\"token comment\"># import seaborn as sns</span>\n<span class=\"token comment\"># color_map = sns.light_palette('orange', as_cmap=True)  #light_palette调色板</span>\n<span class=\"token comment\"># data.style.background_gradient(color_map)</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language- extra-class\"><!--afterbegin--><pre><code>[2020-12-22 16:27:46,410] [    INFO] - Installing senta_bilstm module\n[2020-12-22 16:27:46,436] [    INFO] - Module senta_bilstm already installed in C:\\Users\\Administrator\\.paddlehub\\modules\\senta_bilstm\n[2020-12-22 16:27:57,111] [    INFO] - Installing lac module\n[2020-12-22 16:27:57,579] [    INFO] - Module lac already installed in C:\\Users\\Administrator\\.paddlehub\\modules\\lac\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><!--beforebegin--><div class=\"language-python extra-class\"><!--afterbegin--><pre v-pre class=\"language-python\"><code>x <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token string\">\"date\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>to_list<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">\"pos\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndf_p <span class=\"token operator\">=</span> get_pyechart<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>y<span class=\"token punctuation\">,</span>chart<span class=\"token operator\">=</span><span class=\"token string\">'line'</span><span class=\"token punctuation\">,</span>title<span class=\"token operator\">=</span><span class=\"token string\">'情感倾向'</span><span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span>pos<span class=\"token operator\">=</span><span class=\"token string\">'top'</span><span class=\"token punctuation\">,</span>theme<span class=\"token operator\">=</span>ThemeType<span class=\"token punctuation\">.</span>DARK<span class=\"token punctuation\">)</span>\ndf_p\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><img src=\"https://img-blog.csdnimg.cn/20201222170041469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ0NzYwOTEy,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"数据集\"><a class=\"header-anchor\" href=\"#数据集\">#</a> 数据集：</h1>\n<p>链接：<a href=\"https://pan.baidu.com/s/1p4O8-SF-IVqnJkH-5Fp3jw\" target=\"_blank\" rel=\"noopener noreferrer\">https://pan.baidu.com/s/1p4O8-SF-IVqnJkH-5Fp3jw\n<OutboundLink/></a>提取码：love\n复制这段内容后打开百度网盘手机App，操作更方便哦</p>\n<h1 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\">#</a> 总结</h1>\n<p>情感分析会比较耗时间</p>\n</ContentSlotsDistributor>\n</template>\n<script>\n    require.config({\n        paths: {\n            'echarts':'https://assets.pyecharts.org/assets/echarts.min'\n        }\n    });\n</script>\n\n<script>\n        require(['echarts'], function(echarts) {\n                var chart_f559d7f073444079a826b4bc4e61fbb4 = echarts.init(\n                    document.getElementById('f559d7f073444079a826b4bc4e61fbb4'), 'dark', {renderer: 'canvas'});\n                var option_f559d7f073444079a826b4bc4e61fbb4 = {\n    \"animation\": true,\n    \"animationThreshold\": 2000,\n    \"animationDuration\": 1000,\n    \"animationEasing\": \"cubicOut\",\n    \"animationDelay\": 0,\n    \"animationDurationUpdate\": 300,\n    \"animationEasingUpdate\": \"cubicOut\",\n    \"animationDelayUpdate\": 0,\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"legendHoverLink\": true,\n            \"data\": [\n                18603,\n                18107,\n                17551,\n                15844\n            ],\n            \"showBackground\": false,\n            \"barMinHeight\": 0,\n            \"barCategoryGap\": \"20%\",\n            \"barGap\": \"30%\",\n            \"large\": false,\n            \"largeThreshold\": 400,\n            \"seriesLayoutBy\": \"column\",\n            \"datasetIndex\": 0,\n            \"clip\": true,\n            \"zlevel\": 0,\n            \"z\": 2,\n            \"label\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 16\n            },\n            \"rippleEffect\": {\n                \"show\": true,\n                \"brushType\": \"stroke\",\n                \"scale\": 2.5,\n                \"period\": 4\n            }\n        }\n    ],\n    \"legend\": [\n        {\n            \"data\": [\n                \"\"\n            ],\n            \"selected\": {\n                \"\": true\n            },\n            \"show\": true,\n            \"padding\": 5,\n            \"itemGap\": 10,\n            \"itemWidth\": 25,\n            \"itemHeight\": 14\n        }\n    ],\n    \"tooltip\": {\n        \"show\": true,\n        \"trigger\": \"item\",\n        \"triggerOn\": \"mousemove|click\",\n        \"axisPointer\": {\n            \"type\": \"line\"\n        },\n        \"showContent\": true,\n        \"alwaysShowContent\": false,\n        \"showDelay\": 0,\n        \"hideDelay\": 100,\n        \"textStyle\": {\n            \"fontSize\": 14\n        },\n        \"borderWidth\": 0,\n        \"padding\": 5\n    },\n    \"xAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            },\n            \"data\": [\n                \"\\u9762\\u8bd5\\u7bc7\",\n                \"\\u7b2c3\\u671f\",\n                \"\\u7b2c1\\u671f\",\n                \"\\u7b2c2\\u671f\"\n            ]\n        }\n    ],\n    \"yAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            }\n        }\n    ],\n    \"title\": [\n        {\n            \"text\": \"\\u5404\\u671f\\u5f39\\u5e55\\u6570\\u91cf\",\n            \"subtext\": \"\\u6570\\u636e\\u6765\\u6e90\\uff1a\\u817e\\u8baf\\u89c6\\u9891\",\n            \"left\": \"left\",\n            \"padding\": 5,\n            \"itemGap\": 10\n        }\n    ]\n};\n                chart_f559d7f073444079a826b4bc4e61fbb4.setOption(option_f559d7f073444079a826b4bc4e61fbb4);\n        });\n    </script>\n\n<script>\n    require.config({\n        paths: {\n            'echarts':'https://assets.pyecharts.org/assets/echarts.min'\n        }\n    });\n</script>\n\n<script>\n        require(['echarts'], function(echarts) {\n                var chart_149db93964114a8581bf54a6f79848a1 = echarts.init(\n                    document.getElementById('149db93964114a8581bf54a6f79848a1'), 'dark', {renderer: 'canvas'});\n                var option_149db93964114a8581bf54a6f79848a1 = {\n    \"animation\": true,\n    \"animationThreshold\": 2000,\n    \"animationDuration\": 1000,\n    \"animationEasing\": \"cubicOut\",\n    \"animationDelay\": 0,\n    \"animationDurationUpdate\": 300,\n    \"animationEasingUpdate\": \"cubicOut\",\n    \"animationDelayUpdate\": 0,\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"legendHoverLink\": true,\n            \"data\": [\n                78,\n                79,\n                80,\n                89,\n                92,\n                93,\n                93,\n                103,\n                135\n            ],\n            \"showBackground\": false,\n            \"barMinHeight\": 0,\n            \"barCategoryGap\": \"20%\",\n            \"barGap\": \"30%\",\n            \"large\": false,\n            \"largeThreshold\": 400,\n            \"seriesLayoutBy\": \"column\",\n            \"datasetIndex\": 0,\n            \"clip\": true,\n            \"zlevel\": 0,\n            \"z\": 2,\n            \"label\": {\n                \"show\": true,\n                \"position\": \"right\",\n                \"margin\": 8,\n                \"fontSize\": 16\n            },\n            \"rippleEffect\": {\n                \"show\": true,\n                \"brushType\": \"stroke\",\n                \"scale\": 2.5,\n                \"period\": 4\n            }\n        }\n    ],\n    \"legend\": [\n        {\n            \"data\": [\n                \"\"\n            ],\n            \"selected\": {\n                \"\": true\n            },\n            \"show\": true,\n            \"padding\": 5,\n            \"itemGap\": 10,\n            \"itemWidth\": 25,\n            \"itemHeight\": 14\n        }\n    ],\n    \"tooltip\": {\n        \"show\": true,\n        \"trigger\": \"item\",\n        \"triggerOn\": \"mousemove|click\",\n        \"axisPointer\": {\n            \"type\": \"line\"\n        },\n        \"showContent\": true,\n        \"alwaysShowContent\": false,\n        \"showDelay\": 0,\n        \"hideDelay\": 100,\n        \"textStyle\": {\n            \"fontSize\": 14\n        },\n        \"borderWidth\": 0,\n        \"padding\": 5\n    },\n    \"xAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            }\n        }\n    ],\n    \"yAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            },\n            \"data\": [\n                \"\\u795e\\u9a6c\\u4e0d\\u662f\\u6d6e\\u4e91\",\n                \".\",\n                \"\\u5723\\u96ea\\u5929\\u4f7f\",\n                \"\\u3002\",\n                \"\\u767d\\u9f99\\u541f\",\n                \"\\u4e3a\\u65f6\\u4e0d\\u665ai\",\n                \"momo\",\n                \"\\u30d9\\u2606\\u5c0f\\u5f3a\\u5450\",\n                \"\\u60f3\\u592a\\u591ade\\u732b\"\n            ]\n        }\n    ],\n    \"title\": [\n        {\n            \"text\": \"\\u5f39\\u5e55\\u53d1\\u9001\\u6570\\u91cfTOP10\",\n            \"subtext\": \"\\u6570\\u636e\\u6765\\u6e90\\uff1a\\u817e\\u8baf\\u89c6\\u9891\",\n            \"left\": \"left\",\n            \"padding\": 5,\n            \"itemGap\": 10\n        }\n    ]\n};\n                chart_149db93964114a8581bf54a6f79848a1.setOption(option_149db93964114a8581bf54a6f79848a1);\n        });\n    </script>\n\n<script>\n    require.config({\n        paths: {\n            'echarts':'https://assets.pyecharts.org/assets/echarts.min'\n        }\n    });\n</script>\n\n<script>\n        require(['echarts'], function(echarts) {\n                var chart_5e76e537efd74f428eb6a3adc877fe3a = echarts.init(\n                    document.getElementById('5e76e537efd74f428eb6a3adc877fe3a'), 'dark', {renderer: 'canvas'});\n                var option_5e76e537efd74f428eb6a3adc877fe3a = {\n    \"animation\": true,\n    \"animationThreshold\": 2000,\n    \"animationDuration\": 1000,\n    \"animationEasing\": \"cubicOut\",\n    \"animationDelay\": 0,\n    \"animationDurationUpdate\": 300,\n    \"animationEasingUpdate\": \"cubicOut\",\n    \"animationDelayUpdate\": 0,\n    \"series\": [\n        {\n            \"type\": \"pie\",\n            \"clockwise\": true,\n            \"data\": [\n                {\n                    \"name\": \"v8\",\n                    \"value\": 12\n                },\n                {\n                    \"name\": \"v7\",\n                    \"value\": 135\n                },\n                {\n                    \"name\": \"v6\",\n                    \"value\": 1496\n                },\n                {\n                    \"name\": \"v5\",\n                    \"value\": 2097\n                },\n                {\n                    \"name\": \"v2\",\n                    \"value\": 2499\n                },\n                {\n                    \"name\": \"v4\",\n                    \"value\": 2957\n                },\n                {\n                    \"name\": \"v1\",\n                    \"value\": 3220\n                },\n                {\n                    \"name\": \"v3\",\n                    \"value\": 3403\n                },\n                {\n                    \"name\": \"v0\",\n                    \"value\": 54286\n                }\n            ],\n            \"radius\": [\n                \"0%\",\n                \"75%\"\n            ],\n            \"center\": [\n                \"50%\",\n                \"50%\"\n            ],\n            \"label\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 14,\n                \"formatter\": \"\\u7b49\\u7ea7{b}\\u5360\\u6bd4:{d}%\"\n            },\n            \"rippleEffect\": {\n                \"show\": true,\n                \"brushType\": \"stroke\",\n                \"scale\": 2.5,\n                \"period\": 4\n            }\n        }\n    ],\n    \"legend\": [\n        {\n            \"data\": [\n                \"v8\",\n                \"v7\",\n                \"v6\",\n                \"v5\",\n                \"v2\",\n                \"v4\",\n                \"v1\",\n                \"v3\",\n                \"v0\"\n            ],\n            \"selected\": {},\n            \"show\": true,\n            \"padding\": 5,\n            \"itemGap\": 10,\n            \"itemWidth\": 25,\n            \"itemHeight\": 14\n        }\n    ],\n    \"tooltip\": {\n        \"show\": true,\n        \"trigger\": \"item\",\n        \"triggerOn\": \"mousemove|click\",\n        \"axisPointer\": {\n            \"type\": \"line\"\n        },\n        \"showContent\": true,\n        \"alwaysShowContent\": false,\n        \"showDelay\": 0,\n        \"hideDelay\": 100,\n        \"textStyle\": {\n            \"fontSize\": 14\n        },\n        \"borderWidth\": 0,\n        \"padding\": 5\n    },\n    \"title\": [\n        {\n            \"text\": \"\\u4f1a\\u5458\\u7b49\\u7ea7\\u5206\\u5e03\",\n            \"subtext\": \"\\u6570\\u636e\\u6765\\u6e90\\uff1a\\u817e\\u8baf\\u89c6\\u9891\",\n            \"left\": \"left\",\n            \"padding\": 5,\n            \"itemGap\": 10\n        }\n    ]\n};\n                chart_5e76e537efd74f428eb6a3adc877fe3a.setOption(option_5e76e537efd74f428eb6a3adc877fe3a);\n        });\n    </script>\n\n<script>\n    require.config({\n        paths: {\n            'echarts':'https://assets.pyecharts.org/assets/echarts.min'\n        }\n    });\n</script>\n\n<script>\n        require(['echarts'], function(echarts) {\n                var chart_6f1d8978b2aa413abb27794eca45b9da = echarts.init(\n                    document.getElementById('6f1d8978b2aa413abb27794eca45b9da'), 'dark', {renderer: 'canvas'});\n                var option_6f1d8978b2aa413abb27794eca45b9da = {\n    \"animation\": true,\n    \"animationThreshold\": 2000,\n    \"animationDuration\": 1000,\n    \"animationEasing\": \"cubicOut\",\n    \"animationDelay\": 0,\n    \"animationDurationUpdate\": 300,\n    \"animationEasingUpdate\": \"cubicOut\",\n    \"animationDelayUpdate\": 0,\n    \"series\": [\n        {\n            \"type\": \"bar\",\n            \"legendHoverLink\": true,\n            \"data\": [\n                2772,\n                1569,\n                481,\n                314,\n                276,\n                241,\n                205,\n                109\n            ],\n            \"showBackground\": false,\n            \"barMinHeight\": 0,\n            \"barCategoryGap\": \"20%\",\n            \"barGap\": \"30%\",\n            \"large\": false,\n            \"largeThreshold\": 400,\n            \"seriesLayoutBy\": \"column\",\n            \"datasetIndex\": 0,\n            \"clip\": true,\n            \"zlevel\": 0,\n            \"z\": 2,\n            \"label\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 16\n            },\n            \"rippleEffect\": {\n                \"show\": true,\n                \"brushType\": \"stroke\",\n                \"scale\": 2.5,\n                \"period\": 4\n            }\n        }\n    ],\n    \"legend\": [\n        {\n            \"data\": [\n                \"\"\n            ],\n            \"selected\": {\n                \"\": true\n            },\n            \"show\": true,\n            \"padding\": 5,\n            \"itemGap\": 10,\n            \"itemWidth\": 25,\n            \"itemHeight\": 14\n        }\n    ],\n    \"tooltip\": {\n        \"show\": true,\n        \"trigger\": \"item\",\n        \"triggerOn\": \"mousemove|click\",\n        \"axisPointer\": {\n            \"type\": \"line\"\n        },\n        \"showContent\": true,\n        \"alwaysShowContent\": false,\n        \"showDelay\": 0,\n        \"hideDelay\": 100,\n        \"textStyle\": {\n            \"fontSize\": 14\n        },\n        \"borderWidth\": 0,\n        \"padding\": 5\n    },\n    \"xAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            },\n            \"data\": [\n                \"\\u4e01\\u8f89\",\n                \"\\u738b\\u9a81\",\n                \"\\u6731\\u4e00\\u6684\",\n                \"\\u674e\\u664b\\u6654\",\n                \"\\u738b\\u9896\\u98de\",\n                \"\\u5218\\u715c\\u6210\",\n                \"\\u8a79\\u79cb\\u6021\",\n                \"\\u77bf\\u6cfd\\u6797\"\n            ]\n        }\n    ],\n    \"yAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            }\n        }\n    ],\n    \"title\": [\n        {\n            \"text\": \"\\u88ab\\u63d0\\u53ca\\u6b21\\u6570\",\n            \"subtext\": \"\\u6570\\u636e\\u6765\\u6e90\\uff1a\\u817e\\u8baf\\u89c6\\u9891\",\n            \"left\": \"left\",\n            \"padding\": 5,\n            \"itemGap\": 10\n        }\n    ]\n};\n                chart_6f1d8978b2aa413abb27794eca45b9da.setOption(option_6f1d8978b2aa413abb27794eca45b9da);\n        });\n    </script>\n\n<script>\n    require.config({\n        paths: {\n            'echarts':'https://assets.pyecharts.org/assets/echarts.min'\n        }\n    });\n</script>\n\n<script>\n        require(['echarts'], function(echarts) {\n                var chart_34cdda93fa8a4c00b8eb1ab935752ca3 = echarts.init(\n                    document.getElementById('34cdda93fa8a4c00b8eb1ab935752ca3'), 'dark', {renderer: 'canvas'});\n                var option_34cdda93fa8a4c00b8eb1ab935752ca3 = {\n    \"animation\": true,\n    \"animationThreshold\": 2000,\n    \"animationDuration\": 1000,\n    \"animationEasing\": \"cubicOut\",\n    \"animationDelay\": 0,\n    \"animationDurationUpdate\": 300,\n    \"animationEasingUpdate\": \"cubicOut\",\n    \"animationDelayUpdate\": 0,\n    \"series\": [\n        {\n            \"type\": \"line\",\n            \"name\": \"\\u60c5\\u611f\\u503e\\u5411\",\n            \"connectNulls\": true,\n            \"symbolSize\": 4,\n            \"showSymbol\": true,\n            \"smooth\": true,\n            \"clip\": true,\n            \"step\": false,\n            \"data\": [\n                [\n                    \"2020-12-22T00:00:00\",\n                    0.66\n                ],\n                [\n                    \"2020-12-22T00:15:00\",\n                    0.6\n                ],\n                [\n                    \"2020-12-22T00:30:00\",\n                    0.55\n                ],\n                [\n                    \"2020-12-22T00:45:00\",\n                    0.55\n                ]\n            ],\n            \"hoverAnimation\": true,\n            \"label\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8\n            },\n            \"lineStyle\": {\n                \"show\": true,\n                \"width\": 1,\n                \"opacity\": 1,\n                \"curveness\": 0,\n                \"type\": \"solid\"\n            },\n            \"areaStyle\": {\n                \"opacity\": 0.5\n            },\n            \"zlevel\": 0,\n            \"z\": 0\n        }\n    ],\n    \"legend\": [\n        {\n            \"data\": [\n                \"\\u60c5\\u611f\\u503e\\u5411\"\n            ],\n            \"selected\": {\n                \"\\u60c5\\u611f\\u503e\\u5411\": true\n            },\n            \"show\": true,\n            \"padding\": 5,\n            \"itemGap\": 10,\n            \"itemWidth\": 25,\n            \"itemHeight\": 14\n        }\n    ],\n    \"tooltip\": {\n        \"show\": true,\n        \"trigger\": \"item\",\n        \"triggerOn\": \"mousemove|click\",\n        \"axisPointer\": {\n            \"type\": \"line\"\n        },\n        \"showContent\": true,\n        \"alwaysShowContent\": false,\n        \"showDelay\": 0,\n        \"hideDelay\": 100,\n        \"textStyle\": {\n            \"fontSize\": 14\n        },\n        \"borderWidth\": 0,\n        \"padding\": 5\n    },\n    \"xAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            },\n            \"data\": [\n                \"2020-12-22T00:00:00\",\n                \"2020-12-22T00:15:00\",\n                \"2020-12-22T00:30:00\",\n                \"2020-12-22T00:45:00\"\n            ]\n        }\n    ],\n    \"yAxis\": [\n        {\n            \"show\": true,\n            \"scale\": false,\n            \"nameLocation\": \"end\",\n            \"nameGap\": 15,\n            \"gridIndex\": 0,\n            \"axisLabel\": {\n                \"show\": true,\n                \"position\": \"top\",\n                \"margin\": 8,\n                \"fontSize\": 13\n            },\n            \"inverse\": false,\n            \"offset\": 0,\n            \"splitNumber\": 5,\n            \"minInterval\": 0,\n            \"splitLine\": {\n                \"show\": false,\n                \"lineStyle\": {\n                    \"show\": true,\n                    \"width\": 1,\n                    \"opacity\": 1,\n                    \"curveness\": 0,\n                    \"type\": \"solid\"\n                }\n            }\n        }\n    ],\n    \"title\": [\n        {\n            \"text\": \"\\u60c5\\u611f\\u503e\\u5411\",\n            \"subtext\": \"\\u6570\\u636e\\u6765\\u6e90\\uff1a\\u817e\\u8baf\\u89c6\\u9891\",\n            \"left\": \"left\",\n            \"padding\": 5,\n            \"itemGap\": 10\n        }\n    ]\n};\n                chart_34cdda93fa8a4c00b8eb1ab935752ca3.setOption(option_34cdda93fa8a4c00b8eb1ab935752ca3);\n        });\n    </script>\n\n\n"]}]}